{
	"info": {
		"_postman_id": "a9424867-b45b-4bdc-b2c9-06c88e548e25",
		"name": "Tyk Demo - Keycloak DCR",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6131676"
	},
	"item": [
		{
			"name": "Part 1 - Obtain access token from keycloak",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// this if statement helps prevent the code within from generating a failed test status, since this example requires manual human intervention to be successful it does not work in an automated environment",
							"if (pm.response.code == 200) {",
							"    var jsonData = JSON.parse(responseBody);",
							"    postman.setEnvironmentVariable(\"token\", jsonData.access_token);",
							"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
							"    postman.setEnvironmentVariable(\"id_token\", jsonData.id_token);",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "<client-id>",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "<client-secret>",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://{{keycloak.host}}/realms/{{realm}}/protocol/openid-connect/token",
					"protocol": "http",
					"host": [
						"{{keycloak.host}}"
					],
					"path": [
						"realms",
						"{{realm}}",
						"protocol",
						"openid-connect",
						"token"
					]
				},
				"description": "Obtain SAT (service account token)\n\nTo use this example, you must update the `client_id` and `client_secret` values, using those of the OAuth client created by following the guidance as described in the _usage_ section of the deployment readme."
			},
			"response": []
		},
		{
			"name": "Part 2 - Call API",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "<token>",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{tyk-gateway.host}}/keycloak-dcr-api/get",
					"protocol": "http",
					"host": [
						"{{tyk-gateway.host}}"
					],
					"path": [
						"keycloak-dcr-api",
						"get"
					]
				},
				"description": "Set the authorization token using the token generated in Part 1. This will grant access to the API."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "tyk-gateway.host",
			"value": "tyk-gateway.localhost:8080",
			"type": "string"
		},
		{
			"key": "keycloak.host",
			"value": "keycloak:8180",
			"type": "string"
		},
		{
			"key": "realm",
			"value": "master",
			"type": "string"
		},
		{
			"key": "test-runner-ignore",
			"value": "true",
			"type": "string"
		}
	]
}