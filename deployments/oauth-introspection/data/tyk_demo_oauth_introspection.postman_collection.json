{
  "info": {
    "_postman_id": "oauth-introspection-demo",
    "name": "OAuth Introspection Demo",
    "description": "Demonstrates OAuth2 token introspection with Keycloak and Tyk Gateway",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Token Management",
      "item": [
        {
          "name": "Generate User Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('user_access_token', response.access_token);",
                  "    pm.environment.set('user_refresh_token', response.refresh_token);",
                  "    pm.environment.set('user_token_type', response.token_type);",
                  "    pm.environment.set('user_expires_in', response.expires_in);",
                  "    ",
                  "    pm.test('Access token received', function () {",
                  "        pm.expect(response.access_token).to.not.be.undefined;",
                  "    });",
                  "    ",
                  "    pm.test('Token type is Bearer', function () {",
                  "        pm.expect(response.token_type).to.equal('Bearer');",
                  "    });",
                  "} else {",
                  "    pm.test('Token generation failed', function () {",
                  "        pm.expect(pm.response.code).to.equal(200);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "test-client",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "test-client-secret",
                  "type": "text"
                },
                {
                  "key": "username",
                  "value": "testuser",
                  "type": "text"
                },
                {
                  "key": "password",
                  "value": "password",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "password",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "http://keycloak.localhost:8180/realms/tyk/protocol/openid-connect/token",
              "protocol": "http",
              "host": ["keycloak", "localhost"],
              "port": "8180",
              "path": ["realms", "tyk", "protocol", "openid-connect", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Generate Service Account Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('service_access_token', response.access_token);",
                  "    pm.environment.set('service_token_type', response.token_type);",
                  "    pm.environment.set('service_expires_in', response.expires_in);",
                  "    ",
                  "    pm.test('Service access token received', function () {",
                  "        pm.expect(response.access_token).to.not.be.undefined;",
                  "    });",
                  "    ",
                  "    pm.test('Token type is Bearer', function () {",
                  "        pm.expect(response.token_type).to.equal('Bearer');",
                  "    });",
                  "} else {",
                  "    pm.test('Service token generation failed', function () {",
                  "        pm.expect(pm.response.code).to.equal(200);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "client_id",
                  "value": "test-client",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "test-client-secret",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "client_credentials",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "http://keycloak.localhost:8180/realms/tyk/protocol/openid-connect/token",
              "protocol": "http",
              "host": ["keycloak", "localhost"],
              "port": "8180",
              "path": ["realms", "tyk", "protocol", "openid-connect", "token"]
            }
          },
          "response": []
        },
        {
          "name": "Introspect User Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    ",
                  "    pm.test('Token is active', function () {",
                  "        pm.expect(response.active).to.be.true;",
                  "    });",
                  "    ",
                  "    pm.test('Client ID present', function () {",
                  "        pm.expect(response.client_id).to.not.be.undefined;",
                  "    });",
                  "    ",
                  "    pm.test('Username present for user token', function () {",
                  "        pm.expect(response.username).to.not.be.undefined;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "token",
                  "value": "{{user_access_token}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "http://keycloak.localhost:8180/realms/tyk/protocol/openid-connect/token/introspect",
              "protocol": "http",
              "host": ["keycloak", "localhost"],
              "port": "8180",
              "path": [
                "realms",
                "tyk",
                "protocol",
                "openid-connect",
                "token",
                "introspect"
              ]
            },
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "key": "username",
                  "value": "tyk-introspection-client",
                  "type": "string"
                },
                {
                  "key": "password",
                  "value": "tyk-introspection-secret",
                  "type": "string"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "API Testing",
      "item": [
        {
          "name": "Test API with User Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API call successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    ",
                  "    pm.test('OAuth Client ID header present', function () {",
                  "        pm.expect(response.headers['X-Oauth-Client-Id']).to.not.be.undefined;",
                  "    });",
                  "    ",
                  "    pm.test('OAuth Username header present', function () {",
                  "        pm.expect(response.headers['X-Oauth-Username']).to.not.be.undefined;",
                  "    });",
                  "    ",
                  "    pm.test('OAuth Subject header present', function () {",
                  "        pm.expect(response.headers['X-Oauth-Subject']).to.not.be.undefined;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "http://tyk-gateway.localhost:8080/introspection/anything",
              "protocol": "http",
              "host": ["tyk-gateway", "localhost"],
              "port": "8080",
              "path": ["introspection", "anything"]
            }
          },
          "response": []
        },
        {
          "name": "Test API with Service Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API call successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    ",
                  "    pm.test('OAuth Client ID header present', function () {",
                  "        pm.expect(response.headers['X-Oauth-Client-Id']).to.not.be.undefined;",
                  "    });",
                  "    ",
                  "    pm.test('OAuth Subject header present', function () {",
                  "        pm.expect(response.headers['X-Oauth-Subject']).to.not.be.undefined;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{service_access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "http://tyk-gateway.localhost:8080/introspection/anything",
              "protocol": "http",
              "host": ["tyk-gateway", "localhost"],
              "port": "8080",
              "path": ["introspection", "anything"]
            }
          },
          "response": []
        },
        {
          "name": "Test API without Token (401 Expected)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API correctly rejects request without token', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Error response contains expected error', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.error).to.equal('missing_token');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://tyk-gateway.localhost:8080/introspection/anything",
              "protocol": "http",
              "host": ["tyk-gateway", "localhost"],
              "port": "8080",
              "path": ["introspection", "anything"]
            }
          },
          "response": []
        },
        {
          "name": "Test API with Invalid Token (401 Expected)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('API correctly rejects invalid token', function () {",
                  "    pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Error response contains expected error', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.error).to.equal('invalid_token');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid.token.here",
                "type": "text"
              }
            ],
            "url": {
              "raw": "http://tyk-gateway.localhost:8080/introspection/anything",
              "protocol": "http",
              "host": ["tyk-gateway", "localhost"],
              "port": "8080",
              "path": ["introspection", "anything"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
