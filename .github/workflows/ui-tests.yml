name: UI Tests

on:
  pull_request:
    branches:
      - master
      - release-*
  push:
    branches:
      - qa/*
  workflow_dispatch:
    inputs:
      deployement_type:
        default: "on-premises"
        description: "deployment type, for example: on-premises. Other type - WIP"
        required: true
      dashboard_image_tag:
        default: "v5.0"
        description: "dashboard image tag, for example:v5.0. WIP: ID from ECR (maybe PR number)"
        required: true
      gateway_image_tag:
        default: "v5.0"
        description: "gateway image tag, for example:v5.0"
        required: true

env:
  GOPRIVATE: github.com/TykTechnologies

jobs:
  test:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        go-version: [1.19.x]
        platform: [ubuntu-latest]
        arch: [amd64]
        node-version: [15.x]
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.4.1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Fix private module deps
      env:
        TOKEN: '${{ secrets.ORG_GH_TOKEN }}'
      run: >
        git config --global url."https://${TOKEN}@github.com".insteadOf "https://github.com"
    
    - name: Check if test framework branch exists
      id: check_test_branch
      run: |
        echo "::set-output name=branch::master"
        if git ls-remote --exit-code --heads https://github.com/TykTechnologies/tyk-analytics-tests ${{ github.base_ref }}; then
          echo "::set-output name=branch::${{ github.base_ref	}}"
        fi
        if git ls-remote --exit-code --heads https://github.com/TykTechnologies/tyk-analytics-tests ${{ github.head_ref	}}; then
          echo "::set-output name=branch::${{ github.head_ref	}}"
        fi
        if git ls-remote --exit-code --heads https://github.com/TykTechnologies/tyk-analytics-tests ${{ github.ref }}; then
          echo "::set-output name=branch::${{ github.ref	}}"
        fi
    - name: Checkout test repository
      uses: actions/checkout@master
      with:
        repository: TykTechnologies/tyk-analytics-tests
        submodules: true
        path: tyk-analytics-tests
        ref: ${{ steps.check_test_branch.outputs.branch	 }}

    - name: Update Hosts
      run: sudo ./scripts/update-hosts.sh

    - name: start tyk demo
      run: /up.sh
      env:
        DASHBOARD_VERSION: ${{ github.event.inputs.dashboard_image_tag }}
        GATEWAY_VERSION: ${{ github.event.inputs.gateway_image_tag }}
        
    - name: Install test dependecies
      run: |
        npm ci
      working-directory: tyk-analytics-tests/playwright

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      working-directory: tyk-analytics-tests/playwright

    # - name: Waiting for dashboard
    #   run: |
    #     while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000/hello/)" != "200" ]]; do sleep 60 && echo "waiting for dashboard '$(date +"%T")'"; done
    #   timeout-minutes: 15    
    
    - name: Execute UI tests
      id: test_execution
      run: |
        npm run test
      env:
        URL: "http://tyk-dashboard.localhost:3000/"
      working-directory: tyk-analytics-tests/playwright
        
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: tyk-analytics-tests/playwright/playwright-report/
        retention-days: 30