---
name: Tyk Demo API Tests
on:
  - push
jobs:
  Tyk-Demo-Api-Tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }}
          event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by
          GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository
          is ${{ github.repository }}."
      - name: Check Out Repository Code
        uses: actions/checkout@v4
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the
          runner."
      - name: Extract Docker image tag
        id: get-gateway-tag
        run: |
          TAG=$(grep 'tykio/tyk-gateway:' deployments/tyk/docker-compose.yml | awk -F':' '{print $NF}' | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' -e 's/\${GATEWAY_VERSION:-\(.*\)}/\1/' -e 's/^-//' -e 's/}$//')
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
      - name: Echo tag
        run: |
          echo "Extracted tag: ${{ steps.get-gateway-tag.outputs.tag }}"
      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: .bootstrap/plugin-cache/${{ steps.get-gateway-tag.outputs.tag }}
          key: ${{ runner.os }}-plugin-cache-${{ steps.get-gateway-tag.outputs.tag }}-${{ hashFiles('.bootstrap/plugin-cache/**/*') }}
          restore-keys: |
            ${{ runner.os }}-plugin-cache-${{ steps.get-gateway-tag.outputs.tag }}-
            ${{ runner.os }}-plugin-cache-
      - name: Create Environment File
        run: |
          echo "DASHBOARD_LICENCE=${{ secrets.DASH_LICENSE }}" >> .env
          echo "MDCB_LICENCE=${{ secrets.MDCB_LICENSE }}" >> .env
      - name: Update Hosts
        run: sudo ./scripts/update-hosts.sh
      - name: Bootstrap and Test All Eligible Deployments
        run: sudo ./scripts/test-all.sh
      - name: Save cache
        uses: actions/cache@v3
        if: always()
        with:
          path: .bootstrap/plugin-cache/${{ steps.get-gateway-tag.outputs.tag }}
          key: ${{ runner.os }}-plugin-cache-${{ steps.get-gateway-tag.outputs.tag }}-${{
            hashFiles('.bootstrap/plugin-cache/**/*') }}
      - name: Store Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: logs/
      - name: Show Bootstrap Log
        if: always()
        run: cat logs/bootstrap.log
      - name: Show Test Log
        if: always()
        run: cat logs/test.log
      - run: echo "üçè This job's status is ${{ job.status }}."
